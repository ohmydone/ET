//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class StatusEffectsConfig: Bright.Config.BeanBase
{
    public StatusEffectsConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        EffectType = _buf.ReadString();
        OwnerAbility = _buf.ReadString();
        Target = _buf.ReadString();
        TriggerType = _buf.ReadString();
        TriggerParam = _buf.ReadString();
        Probability = _buf.ReadString();
        KV1 = _buf.ReadString();
        KV2 = _buf.ReadString();
        KV3 = _buf.ReadString();
        Param1 = _buf.ReadString();
        Param2 = _buf.ReadString();
        PostInit();
    }

    public static StatusEffectsConfig DeserializeStatusEffectsConfig(ByteBuf _buf)
    {
        return new StatusEffectsConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 效果类型
    /// </summary>
    public string EffectType { get; private set; }
    /// <summary>
    /// 所属能力
    /// </summary>
    public string OwnerAbility { get; private set; }
    /// <summary>
    /// 作用对象
    /// </summary>
    public string Target { get; private set; }
    /// <summary>
    /// 触发类型
    /// </summary>
    public string TriggerType { get; private set; }
    /// <summary>
    /// 触发参数
    /// </summary>
    public string TriggerParam { get; private set; }
    /// <summary>
    /// 触发概率
    /// </summary>
    public string Probability { get; private set; }
    public string KV1 { get; private set; }
    public string KV2 { get; private set; }
    public string KV3 { get; private set; }
    public string Param1 { get; private set; }
    public string Param2 { get; private set; }

    public const int __ID__ = -1049051150;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "EffectType:" + EffectType + ","
        + "OwnerAbility:" + OwnerAbility + ","
        + "Target:" + Target + ","
        + "TriggerType:" + TriggerType + ","
        + "TriggerParam:" + TriggerParam + ","
        + "Probability:" + Probability + ","
        + "KV1:" + KV1 + ","
        + "KV2:" + KV2 + ","
        + "KV3:" + KV3 + ","
        + "Param1:" + Param1 + ","
        + "Param2:" + Param2 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
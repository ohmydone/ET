//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class SkillStepConfig: Bright.Config.BeanBase
{
    public SkillStepConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        SkillId = _buf.ReadInt();
        Group = _buf.ReadString();
        ParaCount = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillStepDatas = new System.Collections.Generic.List<SkillStepData>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { SkillStepData _e0;  _e0 = SkillStepData.DeserializeSkillStepData(_buf); SkillStepDatas.Add(_e0);}}
        PostInit();
    }

    public static SkillStepConfig DeserializeSkillStepConfig(ByteBuf _buf)
    {
        return new SkillStepConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// SkillId
    /// </summary>
    public int SkillId { get; private set; }
    /// <summary>
    /// 阶段
    /// </summary>
    public string Group { get; private set; }
    /// <summary>
    /// 参数数量
    /// </summary>
    public int ParaCount { get; private set; }
    public System.Collections.Generic.List<SkillStepData> SkillStepDatas { get; private set; }

    public const int __ID__ = 1762171455;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        foreach(var _e in SkillStepDatas) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in SkillStepDatas) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillId:" + SkillId + ","
        + "Group:" + Group + ","
        + "ParaCount:" + ParaCount + ","
        + "SkillStepDatas:" + Bright.Common.StringUtil.CollectionToString(SkillStepDatas) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
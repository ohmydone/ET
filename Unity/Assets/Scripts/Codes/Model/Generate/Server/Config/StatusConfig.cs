//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET
{

public sealed partial class StatusConfig: Bright.Config.BeanBase
{
    public StatusConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        ID = _buf.ReadString();
        Name = _buf.ReadString();
        Type = _buf.ReadString();
        StatusSlot = _buf.ReadString();
        CanStack = _buf.ReadString();
        Description = _buf.ReadString();
        ActionControl = _buf.ReadString();
        AttributeType = _buf.ReadString();
        AttributeParams = _buf.ReadString();
        Effect1 = _buf.ReadString();
        Effect2 = _buf.ReadString();
        Effect3 = _buf.ReadString();
        PostInit();
    }

    public static StatusConfig DeserializeStatusConfig(ByteBuf _buf)
    {
        return new StatusConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 状态ID
    /// </summary>
    public string ID { get; private set; }
    /// <summary>
    /// 状态名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 状态类型
    /// </summary>
    public string Type { get; private set; }
    /// <summary>
    /// 显示在状态栏
    /// </summary>
    public string StatusSlot { get; private set; }
    /// <summary>
    /// 能否叠加
    /// </summary>
    public string CanStack { get; private set; }
    /// <summary>
    /// 状态描述
    /// </summary>
    public string Description { get; private set; }
    /// <summary>
    /// 行为禁制
    /// </summary>
    public string ActionControl { get; private set; }
    /// <summary>
    /// 属性修饰
    /// </summary>
    public string AttributeType { get; private set; }
    /// <summary>
    /// 修饰参数
    /// </summary>
    public string AttributeParams { get; private set; }
    public string Effect1 { get; private set; }
    public string Effect2 { get; private set; }
    public string Effect3 { get; private set; }

    public const int __ID__ = 1795839476;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Type:" + Type + ","
        + "StatusSlot:" + StatusSlot + ","
        + "CanStack:" + CanStack + ","
        + "Description:" + Description + ","
        + "ActionControl:" + ActionControl + ","
        + "AttributeType:" + AttributeType + ","
        + "AttributeParams:" + AttributeParams + ","
        + "Effect1:" + Effect1 + ","
        + "Effect2:" + Effect2 + ","
        + "Effect3:" + Effect3 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}